# This ci gate build, which runs in the Azure DevOps,
# is on the way to deprecation

# trigger:
#   batch: true
#   branches:
#     include:
#     - main

# Disable trigger and PR
trigger: none
pr: none

pool:
  name: Vienna-DataScience-Combined-1ES
  demands: ImageOverride -equals MMS2019

variables:
  directory: .
  python_version: 3.8
  # for aml workspace: aml1p-ml-eus2
  service_connection: aml-ds-arm

steps:

- checkout: self
  clean: true

- task: UsePythonVersion@0
  inputs:
    versionSpec: $(python_version)

- pwsh: |
    pip install --upgrade pip
    pip install .[pipeline,build,dev]
  displayName: Install Shrike
  workingDirectory: $(directory)

- pwsh: |
    black --check $(directory)
  displayName: Format Check (black)

- pwsh: |
    flake8 $(directory)
  displayName: Format Check (flake8)

# Reference:
# https://dev.azure.com/eemo/TEE/_apps/hub/ms.vss-build-web.ci-designer-hub?pipelineId=345&branch=develop
- task: AzureCLI@2
  displayName: Unit Tests for shrike.pipeline and shrike.build
  inputs:
    azureSubscription: $(service_connection)
    scriptType: pscore
    scriptLocation: inlineScript
    inlineScript: |
      pytest tests\tests_pipeline tests\tests_build --cov=shrike/pipeline --cov=shrike/build --junitxml=test-result.xml --cov-report=xml --cov-report=html
    workingDirectory: $(directory)

# https://www.codewrecks.com/post/old/2018/11/run-code-coverage-for-python-project-with-azure-devops/
- task: PublishCodeCoverageResults@1
  displayName: Publish Code Coverage Results
  condition: succeededOrFailed()
  inputs:
    codeCoverageTool: Cobertura
    failIfCoverageEmpty: true
    summaryFileLocation: '**/coverage.xml'

# https://gunnarpeipman.com/azure-devops-check-code-coverage/
- task: BuildQualityChecks@8
  displayName: Check Code Coverage
  inputs:
    baseBranchRef: $(Build.SourceBranch)
    checkCoverage: true
    coverageType: lines
    forceCoverageImprovement: false
    coverageThreshold: 70
  continueOnError: true

- pwsh: |
    python setup.py sdist bdist_wheel
  displayName: Build Wheel
  workingDirectory: $(directory)


